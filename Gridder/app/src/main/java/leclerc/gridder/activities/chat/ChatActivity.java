package leclerc.gridder.activities.chat;import android.content.Context;import android.graphics.Typeface;import android.os.AsyncTask;import android.os.Bundle;import android.support.v7.app.ActionBar;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.EditText;import android.widget.ImageButton;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;import leclerc.gridder.R;import leclerc.gridder.activities.chat.gcm.Content;import leclerc.gridder.activities.chat.gcm.POST2GCM;import leclerc.gridder.data.GridsLoader;import leclerc.gridder.data.User;/** * Created by Antoine on 2015-04-17. */public class ChatActivity extends AppCompatActivity {    private final boolean USING_EMULATOR = true;    private final String ID_Antoine = "APA91bHDwZd1Fd1HZcIBr_PaX9-ZRjmxrgQQbpxhapCjZB8dyk6193uz6BeaN9V-dzd-9mocgv0kCQ18_6KJyDHCcDn5AYEugUAay1Z77qUEcEzz_5wr9-XUgLGJ5KuCd4zF96Nzf81a";    private final String ID_Maxime = "APA91bGt8BZj0R62z0DuaWbyNXeyR4fLuikF5_vbyBL9o6jpVQUWGcUhieyD_NMnnyZSYtEN2pvsoOQZw1JPOgNfpm7oNs5hYhPMDpGjs4lgSitTTA-dWLGqjTx7NKjeP6b5uaM4SEx6";    private final String ID_Emulator = "APA91bFmbo01cSQXo5z_qam15H84QPiykQAbpLCqoBv2AIeDj0dJGW1WOtrWXQ-tWz3Gpa7wGebGTe5hPAUjHnaWjPjppNGmtYKwGZ3CR8nBCmhiRq-nqY3H8FUFXen6mRYW4sy3xbO-";    private ListView messagesList;    private EditText message;    private ImageButton btnCamera;    private ImageButton btnSend;    public static ChatHeader chatHeader;    private static ChatMessagesAdapter messagesAdapter;    public static Context staticContext;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_chat);        //TODO: Handle open notification        try {            ActionBar bar = getSupportActionBar();            bar.setDisplayShowCustomEnabled(true);            bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);            bar.setCustomView(R.layout.layout_actionbar);            View v = bar.getCustomView();            TextView txtPrimaryTitle = (TextView)v.findViewById(R.id.txtPrimaryTitle);            txtPrimaryTitle.setTypeface(Typeface.createFromAsset(getAssets(), "fonts/calibri.ttf"));        }        catch(NullPointerException e) {        }        messagesList = (ListView)findViewById(R.id.chat_messages_list);        message = (EditText)findViewById(R.id.chat_message);        btnCamera = (ImageButton)findViewById(R.id.chat_camera);        btnSend = (ImageButton)findViewById(R.id.chat_send);        chatHeader = new ChatHeader(this, findViewById(R.id.chat_header));        if(messagesAdapter == null)            messagesAdapter = new ChatMessagesAdapter(this, new ArrayList<ChatMessage>());        messagesList.setAdapter(messagesAdapter);        messagesList.setTranscriptMode(ListView.TRANSCRIPT_MODE_ALWAYS_SCROLL);        messagesList.setSelector(android.R.color.transparent);        messagesList.setDividerHeight(0);        staticContext = this;        final long OtherUserId = 1;        final long OtherUserGridId = 1;        //new GridsLoader.TaskFindCommons().execute(OtherUserId, OtherUserGridId);        new GridsLoader.TaskFindPersonChat().execute();        Toast.makeText(this, "Your username is " + User.getInstance().getUsername(), Toast.LENGTH_LONG).show();    }    public void onCameraClicked(View v) {        //chatHeader.setCommonInterests(User.getInstance().getCurrentGrid().getElements());    }    private static int messageId = 0;    public void onSendClicked(View v) {        if(message.getText().length() > 0) {            messagesAdapter.add(new ChatMessage(this, ++messageId, null, message.getText().toString()));            new AsyncTask<String, Void, Void>() {                @Override                protected Void doInBackground(String... params) {                    Content content = new Content();                    content.createData(params[1], params[3]);                    content.setNotification(params[2], params[3]);                    content.setDestination(User.getInstance().getOtherUserId());                    content.setSender(User.getInstance().getRegId());                    POST2GCM.post(content);                    return null;                }            }.execute(String.valueOf(messageId),                    User.getInstance().getRegId(),                    "New message from " + User.getInstance().getUsername(),                    message.getText().toString());            /*new AsyncTask<String, Void, Void>() {                @Override                protected Void doInBackground(String... params) {                    try {                        Bundle data = new Bundle();                        data.putString("to", User.getInstance().getOtherUserId());                        data.putString("from_username", params[1]);                        data.putString("message", params[2]);                        AtomicInteger msgId = new AtomicInteger();                        String id = Integer.toString(msgId.incrementAndGet());                        GoogleCloudMessaging gcm = GoogleCloudMessaging.getInstance(ChatActivity.this);                        gcm.send((String)data.get("to"), id, data);                    }                    catch (IOException e) {                        e.printStackTrace();                    }                    return null;                }            }.execute(                    String.valueOf(messageId),                    User.getInstance().getUsername(),                    message.getText().toString());*/            message.setText("");        }    }    public static void createMessageInChat(String message) {        if(messagesAdapter != null && staticContext != null) {            messagesAdapter.add(new ChatMessage(staticContext, ++messageId, User.getInstance(), message));        }    }}